type Organization @aws_api_key @aws_cognito_user_pools {
  id: ID!
  country: String!
  region: String!
  city: String!
  type: String!
  name: String!
  description: String
  phone: String
  address: String
  createdBy: String!
  updatedBy: String
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  Laboratories(filter: ModelLaboratoryFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLaboratoryConnection @aws_api_key @aws_cognito_user_pools
}

type UserLabPracticeSession @aws_api_key @aws_cognito_user_pools {
  id: ID!
  sessionStartDate: AWSDateTime
  sessionEndDate: AWSDateTime
  userID: ID!
  labpracticesessionID: ID!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  User: User @aws_api_key @aws_cognito_user_pools
  LabPracticeSession: LabPracticeSession @aws_api_key @aws_cognito_user_pools
}

type User @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  lastNames: String!
  documentIdNumber: String
  email: String!
  phone: String
  userName: String
  s3AvatarPath: String
  dateOfBirth: String
  updatedBy: String
  createdBy: String!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  UserLabPracticeSessions(filter: ModelUserLabPracticeSessionFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools
  UserLabSemesters(labsemesterID: ModelIDKeyConditionInput, filter: ModelUserLabSemesterFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserLabSemesterConnection @aws_api_key @aws_cognito_user_pools
}

type LabPracticeSessionCommand @aws_api_key @aws_cognito_user_pools {
  id: ID!
  requestDate: AWSDateTime!
  executionDate: AWSDateTime
  status: String!
  parameters: AWSJSON
  labpracticesessionID: ID!
  labpracticecommandID: ID!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  LabPracticeSession: LabPracticeSession @aws_api_key @aws_cognito_user_pools
  LabPracticeCommand: LabPracticeCommand @aws_api_key @aws_cognito_user_pools
}

type LabPracticeOutput @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  labelName: String
  order: Int
  description: String
  units: AWSJSON
  labpracticeID: ID!
  outputType: String!
  updatedBy: String
  createdBy: String!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  LabPractice: LabPractice @aws_api_key @aws_cognito_user_pools
}

type LabPracticeSession @aws_api_key @aws_cognito_user_pools {
  id: ID!
  startDate: AWSDateTime!
  endDate: AWSDateTime!
  description: String
  updatedBy: String
  createdBy: String!
  labpracticeID: ID
  labSemesterID: ID
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  UserLabPracticeSessions(filter: ModelUserLabPracticeSessionFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools
  LabPracticeSessionCommands(filter: ModelLabPracticeSessionCommandFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabPracticeSessionCommandConnection @aws_api_key @aws_cognito_user_pools
  LabPractice: LabPractice @aws_api_key @aws_cognito_user_pools
  LabSemester: LabSemester @aws_api_key @aws_cognito_user_pools
}

type LabPracticeDevice @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  description: String
  type: String
  updatedBy: String
  createdBy: String
  labpracticeID: ID
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  LabPractice: LabPractice @aws_api_key @aws_cognito_user_pools
}

type LabPracticeParameter @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  labelName: String
  order: Int
  description: String
  defaultValue: String!
  minValue: Int
  maxValue: Int
  regex: String
  updatedBy: String
  createdBy: String
  labpracticecommandID: ID
  labpracticeID: ID
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  LabPracticeCommand: LabPracticeCommand @aws_api_key @aws_cognito_user_pools
  LabPractice: LabPractice @aws_api_key @aws_cognito_user_pools
}

type LabPracticeCommand @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  labelName: String
  order: Int
  description: String
  updatedBy: String
  createdBy: String!
  labpracticeID: ID!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  LabPracticeSessionCommands(filter: ModelLabPracticeSessionCommandFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabPracticeSessionCommandConnection @aws_api_key @aws_cognito_user_pools
  LabPracticeParameters(filter: ModelLabPracticeParameterFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabPracticeParameterConnection @aws_api_key @aws_cognito_user_pools
  LabPractice: LabPractice @aws_api_key @aws_cognito_user_pools
}

type LabPractice @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  description: String
  duration: Int!
  updatedBy: String
  createdBy: String!
  laboratoryID: ID!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  LabPracticeOutputs(filter: ModelLabPracticeOutputFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabPracticeOutputConnection @aws_api_key @aws_cognito_user_pools
  LabPracticeSessions(filter: ModelLabPracticeSessionFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools
  LabPracticeDevice: LabPracticeDevice @aws_api_key @aws_cognito_user_pools
  LabPracticeParameters(filter: ModelLabPracticeParameterFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabPracticeParameterConnection @aws_api_key @aws_cognito_user_pools
  LabPracticeCommands(filter: ModelLabPracticeCommandFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabPracticeCommandConnection @aws_api_key @aws_cognito_user_pools
  Laboratory: Laboratory @aws_api_key @aws_cognito_user_pools
}

type LabSemester @aws_api_key @aws_cognito_user_pools {
  id: ID!
  semesterName: String!
  description: String
  professor: String!
  monitorEmailList: AWSJSON
  studentEmailList: AWSJSON!
  updatedBy: String
  createdBy: String!
  laboratoryID: ID!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  LabPracticeSessions(filter: ModelLabPracticeSessionFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools
  Laboratory: Laboratory @aws_api_key @aws_cognito_user_pools
  users(userID: ModelIDKeyConditionInput, filter: ModelUserLabSemesterFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserLabSemesterConnection @aws_api_key @aws_cognito_user_pools
}

type Laboratory @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  description: String
  updatedBy: String
  createdBy: String!
  organizationID: ID!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  Organization: Organization @aws_api_key @aws_cognito_user_pools
  LabPractices(filter: ModelLabPracticeFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabPracticeConnection @aws_api_key @aws_cognito_user_pools
  LabSemesters(filter: ModelLabSemesterFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelLabSemesterConnection @aws_api_key @aws_cognito_user_pools
}

type UserLabSemester @aws_api_key @aws_cognito_user_pools {
  id: ID!
  userID: ID!
  labsemesterID: ID!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  user: User! @aws_api_key @aws_cognito_user_pools
  labsemester: LabSemester! @aws_api_key @aws_cognito_user_pools
}

input LabOutputIn {
  labPracticeOutputID: ID!
  value: String!
  rpiID: ID!
  captureDate: AWSDateTime!
}

type LabOutputOut @aws_api_key @aws_cognito_user_pools {
  labPracticeOutputID: ID!
  value: String!
  rpiID: ID!
  captureDate: AWSDateTime!
}

input LambdaInput {
  message: String!
  topic: String!
}

input EmailInput {
  topic: String!
  message: String!
  emailList: String!
}

type Mutation {
  createOrganization(input: CreateOrganizationInput!, condition: ModelOrganizationConditionInput): Organization @aws_api_key @aws_cognito_user_pools
  updateOrganization(input: UpdateOrganizationInput!, condition: ModelOrganizationConditionInput): Organization @aws_api_key @aws_cognito_user_pools
  deleteOrganization(input: DeleteOrganizationInput!, condition: ModelOrganizationConditionInput): Organization @aws_api_key @aws_cognito_user_pools
  createUserLabPracticeSession(input: CreateUserLabPracticeSessionInput!, condition: ModelUserLabPracticeSessionConditionInput): UserLabPracticeSession @aws_api_key @aws_cognito_user_pools
  updateUserLabPracticeSession(input: UpdateUserLabPracticeSessionInput!, condition: ModelUserLabPracticeSessionConditionInput): UserLabPracticeSession @aws_api_key @aws_cognito_user_pools
  deleteUserLabPracticeSession(input: DeleteUserLabPracticeSessionInput!, condition: ModelUserLabPracticeSessionConditionInput): UserLabPracticeSession @aws_api_key @aws_cognito_user_pools
  createUser(input: CreateUserInput!, condition: ModelUserConditionInput): User @aws_api_key @aws_cognito_user_pools
  updateUser(input: UpdateUserInput!, condition: ModelUserConditionInput): User @aws_api_key @aws_cognito_user_pools
  deleteUser(input: DeleteUserInput!, condition: ModelUserConditionInput): User @aws_api_key @aws_cognito_user_pools
  createLabPracticeSessionCommand(input: CreateLabPracticeSessionCommandInput!, condition: ModelLabPracticeSessionCommandConditionInput): LabPracticeSessionCommand @aws_api_key @aws_cognito_user_pools
  updateLabPracticeSessionCommand(input: UpdateLabPracticeSessionCommandInput!, condition: ModelLabPracticeSessionCommandConditionInput): LabPracticeSessionCommand @aws_api_key @aws_cognito_user_pools
  deleteLabPracticeSessionCommand(input: DeleteLabPracticeSessionCommandInput!, condition: ModelLabPracticeSessionCommandConditionInput): LabPracticeSessionCommand @aws_api_key @aws_cognito_user_pools
  createLabPracticeOutput(input: CreateLabPracticeOutputInput!, condition: ModelLabPracticeOutputConditionInput): LabPracticeOutput @aws_api_key @aws_cognito_user_pools
  updateLabPracticeOutput(input: UpdateLabPracticeOutputInput!, condition: ModelLabPracticeOutputConditionInput): LabPracticeOutput @aws_api_key @aws_cognito_user_pools
  deleteLabPracticeOutput(input: DeleteLabPracticeOutputInput!, condition: ModelLabPracticeOutputConditionInput): LabPracticeOutput @aws_api_key @aws_cognito_user_pools
  createLabPracticeSession(input: CreateLabPracticeSessionInput!, condition: ModelLabPracticeSessionConditionInput): LabPracticeSession @aws_api_key @aws_cognito_user_pools
  updateLabPracticeSession(input: UpdateLabPracticeSessionInput!, condition: ModelLabPracticeSessionConditionInput): LabPracticeSession @aws_api_key @aws_cognito_user_pools
  deleteLabPracticeSession(input: DeleteLabPracticeSessionInput!, condition: ModelLabPracticeSessionConditionInput): LabPracticeSession @aws_api_key @aws_cognito_user_pools
  createLabPracticeDevice(input: CreateLabPracticeDeviceInput!, condition: ModelLabPracticeDeviceConditionInput): LabPracticeDevice @aws_api_key @aws_cognito_user_pools
  updateLabPracticeDevice(input: UpdateLabPracticeDeviceInput!, condition: ModelLabPracticeDeviceConditionInput): LabPracticeDevice @aws_api_key @aws_cognito_user_pools
  deleteLabPracticeDevice(input: DeleteLabPracticeDeviceInput!, condition: ModelLabPracticeDeviceConditionInput): LabPracticeDevice @aws_api_key @aws_cognito_user_pools
  createLabPracticeParameter(input: CreateLabPracticeParameterInput!, condition: ModelLabPracticeParameterConditionInput): LabPracticeParameter @aws_api_key @aws_cognito_user_pools
  updateLabPracticeParameter(input: UpdateLabPracticeParameterInput!, condition: ModelLabPracticeParameterConditionInput): LabPracticeParameter @aws_api_key @aws_cognito_user_pools
  deleteLabPracticeParameter(input: DeleteLabPracticeParameterInput!, condition: ModelLabPracticeParameterConditionInput): LabPracticeParameter @aws_api_key @aws_cognito_user_pools
  createLabPracticeCommand(input: CreateLabPracticeCommandInput!, condition: ModelLabPracticeCommandConditionInput): LabPracticeCommand @aws_api_key @aws_cognito_user_pools
  updateLabPracticeCommand(input: UpdateLabPracticeCommandInput!, condition: ModelLabPracticeCommandConditionInput): LabPracticeCommand @aws_api_key @aws_cognito_user_pools
  deleteLabPracticeCommand(input: DeleteLabPracticeCommandInput!, condition: ModelLabPracticeCommandConditionInput): LabPracticeCommand @aws_api_key @aws_cognito_user_pools
  createLabPractice(input: CreateLabPracticeInput!, condition: ModelLabPracticeConditionInput): LabPractice @aws_api_key @aws_cognito_user_pools
  updateLabPractice(input: UpdateLabPracticeInput!, condition: ModelLabPracticeConditionInput): LabPractice @aws_api_key @aws_cognito_user_pools
  deleteLabPractice(input: DeleteLabPracticeInput!, condition: ModelLabPracticeConditionInput): LabPractice @aws_api_key @aws_cognito_user_pools
  createLabSemester(input: CreateLabSemesterInput!, condition: ModelLabSemesterConditionInput): LabSemester @aws_api_key @aws_cognito_user_pools
  updateLabSemester(input: UpdateLabSemesterInput!, condition: ModelLabSemesterConditionInput): LabSemester @aws_api_key @aws_cognito_user_pools
  deleteLabSemester(input: DeleteLabSemesterInput!, condition: ModelLabSemesterConditionInput): LabSemester @aws_api_key @aws_cognito_user_pools
  createLaboratory(input: CreateLaboratoryInput!, condition: ModelLaboratoryConditionInput): Laboratory @aws_api_key @aws_cognito_user_pools
  updateLaboratory(input: UpdateLaboratoryInput!, condition: ModelLaboratoryConditionInput): Laboratory @aws_api_key @aws_cognito_user_pools
  deleteLaboratory(input: DeleteLaboratoryInput!, condition: ModelLaboratoryConditionInput): Laboratory @aws_api_key @aws_cognito_user_pools
  createUserLabSemester(input: CreateUserLabSemesterInput!, condition: ModelUserLabSemesterConditionInput): UserLabSemester @aws_api_key @aws_cognito_user_pools
  updateUserLabSemester(input: UpdateUserLabSemesterInput!, condition: ModelUserLabSemesterConditionInput): UserLabSemester @aws_api_key @aws_cognito_user_pools
  deleteUserLabSemester(input: DeleteUserLabSemesterInput!, condition: ModelUserLabSemesterConditionInput): UserLabSemester @aws_api_key @aws_cognito_user_pools
  publishMqttMessage(input: LambdaInput!): String @aws_api_key @aws_cognito_user_pools
  labOutputListen(input: LabOutputIn!): LabOutputOut @aws_api_key @aws_cognito_user_pools
  sendEmail(input: EmailInput!): String @aws_api_key @aws_cognito_user_pools
}

type Subscription {
  onCreateOrganization: Organization @aws_subscribe(mutations: ["createOrganization"]) @aws_api_key @aws_cognito_user_pools
  onUpdateOrganization: Organization @aws_subscribe(mutations: ["updateOrganization"]) @aws_api_key @aws_cognito_user_pools
  onDeleteOrganization: Organization @aws_subscribe(mutations: ["deleteOrganization"]) @aws_api_key @aws_cognito_user_pools
  onCreateUserLabPracticeSession: UserLabPracticeSession @aws_subscribe(mutations: ["createUserLabPracticeSession"]) @aws_api_key @aws_cognito_user_pools
  onUpdateUserLabPracticeSession: UserLabPracticeSession @aws_subscribe(mutations: ["updateUserLabPracticeSession"]) @aws_api_key @aws_cognito_user_pools
  onDeleteUserLabPracticeSession: UserLabPracticeSession @aws_subscribe(mutations: ["deleteUserLabPracticeSession"]) @aws_api_key @aws_cognito_user_pools
  onCreateUser: User @aws_subscribe(mutations: ["createUser"]) @aws_api_key @aws_cognito_user_pools
  onUpdateUser: User @aws_subscribe(mutations: ["updateUser"]) @aws_api_key @aws_cognito_user_pools
  onDeleteUser: User @aws_subscribe(mutations: ["deleteUser"]) @aws_api_key @aws_cognito_user_pools
  onCreateLabPracticeSessionCommand: LabPracticeSessionCommand @aws_subscribe(mutations: ["createLabPracticeSessionCommand"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLabPracticeSessionCommand: LabPracticeSessionCommand @aws_subscribe(mutations: ["updateLabPracticeSessionCommand"]) @aws_api_key @aws_cognito_user_pools
  onDeleteLabPracticeSessionCommand: LabPracticeSessionCommand @aws_subscribe(mutations: ["deleteLabPracticeSessionCommand"]) @aws_api_key @aws_cognito_user_pools
  onCreateLabPracticeOutput: LabPracticeOutput @aws_subscribe(mutations: ["createLabPracticeOutput"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLabPracticeOutput: LabPracticeOutput @aws_subscribe(mutations: ["updateLabPracticeOutput"]) @aws_api_key @aws_cognito_user_pools
  onDeleteLabPracticeOutput: LabPracticeOutput @aws_subscribe(mutations: ["deleteLabPracticeOutput"]) @aws_api_key @aws_cognito_user_pools
  onCreateLabPracticeSession: LabPracticeSession @aws_subscribe(mutations: ["createLabPracticeSession"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLabPracticeSession: LabPracticeSession @aws_subscribe(mutations: ["updateLabPracticeSession"]) @aws_api_key @aws_cognito_user_pools
  onDeleteLabPracticeSession: LabPracticeSession @aws_subscribe(mutations: ["deleteLabPracticeSession"]) @aws_api_key @aws_cognito_user_pools
  onCreateLabPracticeDevice: LabPracticeDevice @aws_subscribe(mutations: ["createLabPracticeDevice"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLabPracticeDevice: LabPracticeDevice @aws_subscribe(mutations: ["updateLabPracticeDevice"]) @aws_api_key @aws_cognito_user_pools
  onDeleteLabPracticeDevice: LabPracticeDevice @aws_subscribe(mutations: ["deleteLabPracticeDevice"]) @aws_api_key @aws_cognito_user_pools
  onCreateLabPracticeParameter: LabPracticeParameter @aws_subscribe(mutations: ["createLabPracticeParameter"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLabPracticeParameter: LabPracticeParameter @aws_subscribe(mutations: ["updateLabPracticeParameter"]) @aws_api_key @aws_cognito_user_pools
  onDeleteLabPracticeParameter: LabPracticeParameter @aws_subscribe(mutations: ["deleteLabPracticeParameter"]) @aws_api_key @aws_cognito_user_pools
  onCreateLabPracticeCommand: LabPracticeCommand @aws_subscribe(mutations: ["createLabPracticeCommand"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLabPracticeCommand: LabPracticeCommand @aws_subscribe(mutations: ["updateLabPracticeCommand"]) @aws_api_key @aws_cognito_user_pools
  onDeleteLabPracticeCommand: LabPracticeCommand @aws_subscribe(mutations: ["deleteLabPracticeCommand"]) @aws_api_key @aws_cognito_user_pools
  onCreateLabPractice: LabPractice @aws_subscribe(mutations: ["createLabPractice"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLabPractice: LabPractice @aws_subscribe(mutations: ["updateLabPractice"]) @aws_api_key @aws_cognito_user_pools
  onDeleteLabPractice: LabPractice @aws_subscribe(mutations: ["deleteLabPractice"]) @aws_api_key @aws_cognito_user_pools
  onCreateLabSemester: LabSemester @aws_subscribe(mutations: ["createLabSemester"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLabSemester: LabSemester @aws_subscribe(mutations: ["updateLabSemester"]) @aws_api_key @aws_cognito_user_pools
  onDeleteLabSemester: LabSemester @aws_subscribe(mutations: ["deleteLabSemester"]) @aws_api_key @aws_cognito_user_pools
  onCreateLaboratory: Laboratory @aws_subscribe(mutations: ["createLaboratory"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLaboratory: Laboratory @aws_subscribe(mutations: ["updateLaboratory"]) @aws_api_key @aws_cognito_user_pools
  onDeleteLaboratory: Laboratory @aws_subscribe(mutations: ["deleteLaboratory"]) @aws_api_key @aws_cognito_user_pools
  onCreateUserLabSemester: UserLabSemester @aws_subscribe(mutations: ["createUserLabSemester"]) @aws_api_key @aws_cognito_user_pools
  onUpdateUserLabSemester: UserLabSemester @aws_subscribe(mutations: ["updateUserLabSemester"]) @aws_api_key @aws_cognito_user_pools
  onDeleteUserLabSemester: UserLabSemester @aws_subscribe(mutations: ["deleteUserLabSemester"]) @aws_api_key @aws_cognito_user_pools
  onLabOutputListen(rpiID: ID!): LabOutputOut @aws_subscribe(mutations: ["labOutputListen"]) @aws_api_key @aws_cognito_user_pools
  onUpdateLabPracticeSessionCommandBySessionID(labpracticesessionID: ID!): LabPracticeSessionCommand @aws_subscribe(mutations: ["updateLabPracticeSessionCommand"]) @aws_api_key @aws_cognito_user_pools
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelOrganizationConnection @aws_api_key @aws_cognito_user_pools {
  items: [Organization]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelOrganizationFilterInput {
  id: ModelIDInput
  country: ModelStringInput
  region: ModelStringInput
  city: ModelStringInput
  type: ModelStringInput
  name: ModelStringInput
  description: ModelStringInput
  phone: ModelStringInput
  address: ModelStringInput
  createdBy: ModelStringInput
  updatedBy: ModelStringInput
  and: [ModelOrganizationFilterInput]
  or: [ModelOrganizationFilterInput]
  not: ModelOrganizationFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getOrganization(id: ID!): Organization @aws_api_key @aws_cognito_user_pools
  listOrganizations(filter: ModelOrganizationFilterInput, limit: Int, nextToken: String): ModelOrganizationConnection @aws_api_key @aws_cognito_user_pools
  syncOrganizations(filter: ModelOrganizationFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelOrganizationConnection @aws_api_key @aws_cognito_user_pools
  getUserLabPracticeSession(id: ID!): UserLabPracticeSession @aws_api_key @aws_cognito_user_pools
  listUserLabPracticeSessions(filter: ModelUserLabPracticeSessionFilterInput, limit: Int, nextToken: String): ModelUserLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools
  syncUserLabPracticeSessions(filter: ModelUserLabPracticeSessionFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelUserLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools
  getUser(id: ID!): User @aws_api_key @aws_cognito_user_pools
  listUsers(filter: ModelUserFilterInput, limit: Int, nextToken: String): ModelUserConnection @aws_api_key @aws_cognito_user_pools
  syncUsers(filter: ModelUserFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelUserConnection @aws_api_key @aws_cognito_user_pools
  getLabPracticeSessionCommand(id: ID!): LabPracticeSessionCommand @aws_api_key @aws_cognito_user_pools
  listLabPracticeSessionCommands(filter: ModelLabPracticeSessionCommandFilterInput, limit: Int, nextToken: String): ModelLabPracticeSessionCommandConnection @aws_api_key @aws_cognito_user_pools
  syncLabPracticeSessionCommands(filter: ModelLabPracticeSessionCommandFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLabPracticeSessionCommandConnection @aws_api_key @aws_cognito_user_pools
  getLabPracticeOutput(id: ID!): LabPracticeOutput @aws_api_key @aws_cognito_user_pools
  listLabPracticeOutputs(filter: ModelLabPracticeOutputFilterInput, limit: Int, nextToken: String): ModelLabPracticeOutputConnection @aws_api_key @aws_cognito_user_pools
  syncLabPracticeOutputs(filter: ModelLabPracticeOutputFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLabPracticeOutputConnection @aws_api_key @aws_cognito_user_pools
  getLabPracticeSession(id: ID!): LabPracticeSession @aws_api_key @aws_cognito_user_pools
  listLabPracticeSessions(filter: ModelLabPracticeSessionFilterInput, limit: Int, nextToken: String): ModelLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools
  syncLabPracticeSessions(filter: ModelLabPracticeSessionFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools
  getLabPracticeDevice(id: ID!): LabPracticeDevice @aws_api_key @aws_cognito_user_pools
  listLabPracticeDevices(filter: ModelLabPracticeDeviceFilterInput, limit: Int, nextToken: String): ModelLabPracticeDeviceConnection @aws_api_key @aws_cognito_user_pools
  syncLabPracticeDevices(filter: ModelLabPracticeDeviceFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLabPracticeDeviceConnection @aws_api_key @aws_cognito_user_pools
  getLabPracticeParameter(id: ID!): LabPracticeParameter @aws_api_key @aws_cognito_user_pools
  listLabPracticeParameters(filter: ModelLabPracticeParameterFilterInput, limit: Int, nextToken: String): ModelLabPracticeParameterConnection @aws_api_key @aws_cognito_user_pools
  syncLabPracticeParameters(filter: ModelLabPracticeParameterFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLabPracticeParameterConnection @aws_api_key @aws_cognito_user_pools
  getLabPracticeCommand(id: ID!): LabPracticeCommand @aws_api_key @aws_cognito_user_pools
  listLabPracticeCommands(filter: ModelLabPracticeCommandFilterInput, limit: Int, nextToken: String): ModelLabPracticeCommandConnection @aws_api_key @aws_cognito_user_pools
  syncLabPracticeCommands(filter: ModelLabPracticeCommandFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLabPracticeCommandConnection @aws_api_key @aws_cognito_user_pools
  getLabPractice(id: ID!): LabPractice @aws_api_key @aws_cognito_user_pools
  listLabPractices(filter: ModelLabPracticeFilterInput, limit: Int, nextToken: String): ModelLabPracticeConnection @aws_api_key @aws_cognito_user_pools
  syncLabPractices(filter: ModelLabPracticeFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLabPracticeConnection @aws_api_key @aws_cognito_user_pools
  getLabSemester(id: ID!): LabSemester @aws_api_key @aws_cognito_user_pools
  listLabSemesters(filter: ModelLabSemesterFilterInput, limit: Int, nextToken: String): ModelLabSemesterConnection @aws_api_key @aws_cognito_user_pools
  syncLabSemesters(filter: ModelLabSemesterFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLabSemesterConnection @aws_api_key @aws_cognito_user_pools
  getLaboratory(id: ID!): Laboratory @aws_api_key @aws_cognito_user_pools
  listLaboratorys(filter: ModelLaboratoryFilterInput, limit: Int, nextToken: String): ModelLaboratoryConnection @aws_api_key @aws_cognito_user_pools
  syncLaboratories(filter: ModelLaboratoryFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLaboratoryConnection @aws_api_key @aws_cognito_user_pools
  syncUserLabSemesters(filter: ModelUserLabSemesterFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelUserLabSemesterConnection @aws_api_key @aws_cognito_user_pools
}

input CreateOrganizationInput {
  id: ID
  country: String!
  region: String!
  city: String!
  type: String!
  name: String!
  description: String
  phone: String
  address: String
  createdBy: String!
  updatedBy: String
  _version: Int
}

input UpdateOrganizationInput {
  id: ID!
  country: String
  region: String
  city: String
  type: String
  name: String
  description: String
  phone: String
  address: String
  createdBy: String
  updatedBy: String
  _version: Int
}

input DeleteOrganizationInput {
  id: ID!
  _version: Int
}

input ModelOrganizationConditionInput {
  country: ModelStringInput
  region: ModelStringInput
  city: ModelStringInput
  type: ModelStringInput
  name: ModelStringInput
  description: ModelStringInput
  phone: ModelStringInput
  address: ModelStringInput
  createdBy: ModelStringInput
  updatedBy: ModelStringInput
  and: [ModelOrganizationConditionInput]
  or: [ModelOrganizationConditionInput]
  not: ModelOrganizationConditionInput
}

type ModelUserLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools {
  items: [UserLabPracticeSession]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelUserLabPracticeSessionFilterInput {
  id: ModelIDInput
  sessionStartDate: ModelStringInput
  sessionEndDate: ModelStringInput
  userID: ModelIDInput
  labpracticesessionID: ModelIDInput
  and: [ModelUserLabPracticeSessionFilterInput]
  or: [ModelUserLabPracticeSessionFilterInput]
  not: ModelUserLabPracticeSessionFilterInput
}

input CreateUserLabPracticeSessionInput {
  id: ID
  sessionStartDate: AWSDateTime
  sessionEndDate: AWSDateTime
  userID: ID!
  labpracticesessionID: ID!
  _version: Int
}

input UpdateUserLabPracticeSessionInput {
  id: ID!
  sessionStartDate: AWSDateTime
  sessionEndDate: AWSDateTime
  userID: ID
  labpracticesessionID: ID
  _version: Int
}

input DeleteUserLabPracticeSessionInput {
  id: ID!
  _version: Int
}

input ModelUserLabPracticeSessionConditionInput {
  sessionStartDate: ModelStringInput
  sessionEndDate: ModelStringInput
  userID: ModelIDInput
  labpracticesessionID: ModelIDInput
  and: [ModelUserLabPracticeSessionConditionInput]
  or: [ModelUserLabPracticeSessionConditionInput]
  not: ModelUserLabPracticeSessionConditionInput
}

type ModelUserConnection @aws_api_key @aws_cognito_user_pools {
  items: [User]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelUserFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  lastNames: ModelStringInput
  documentIdNumber: ModelStringInput
  email: ModelStringInput
  phone: ModelStringInput
  userName: ModelStringInput
  s3AvatarPath: ModelStringInput
  dateOfBirth: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  and: [ModelUserFilterInput]
  or: [ModelUserFilterInput]
  not: ModelUserFilterInput
}

input CreateUserInput {
  id: ID
  name: String!
  lastNames: String!
  documentIdNumber: String
  email: String!
  phone: String
  userName: String
  s3AvatarPath: String
  dateOfBirth: String
  updatedBy: String
  createdBy: String!
  _version: Int
}

input UpdateUserInput {
  id: ID!
  name: String
  lastNames: String
  documentIdNumber: String
  email: String
  phone: String
  userName: String
  s3AvatarPath: String
  dateOfBirth: String
  updatedBy: String
  createdBy: String
  _version: Int
}

input DeleteUserInput {
  id: ID!
  _version: Int
}

input ModelUserConditionInput {
  name: ModelStringInput
  lastNames: ModelStringInput
  documentIdNumber: ModelStringInput
  email: ModelStringInput
  phone: ModelStringInput
  userName: ModelStringInput
  s3AvatarPath: ModelStringInput
  dateOfBirth: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  and: [ModelUserConditionInput]
  or: [ModelUserConditionInput]
  not: ModelUserConditionInput
}

type ModelLabPracticeSessionCommandConnection @aws_api_key @aws_cognito_user_pools {
  items: [LabPracticeSessionCommand]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLabPracticeSessionCommandFilterInput {
  id: ModelIDInput
  requestDate: ModelStringInput
  executionDate: ModelStringInput
  status: ModelStringInput
  parameters: ModelStringInput
  labpracticesessionID: ModelIDInput
  labpracticecommandID: ModelIDInput
  and: [ModelLabPracticeSessionCommandFilterInput]
  or: [ModelLabPracticeSessionCommandFilterInput]
  not: ModelLabPracticeSessionCommandFilterInput
}

input CreateLabPracticeSessionCommandInput {
  id: ID
  requestDate: AWSDateTime!
  executionDate: AWSDateTime
  status: String!
  parameters: AWSJSON
  labpracticesessionID: ID!
  labpracticecommandID: ID!
  _version: Int
}

input UpdateLabPracticeSessionCommandInput {
  id: ID!
  requestDate: AWSDateTime
  executionDate: AWSDateTime
  status: String
  parameters: AWSJSON
  labpracticesessionID: ID
  labpracticecommandID: ID
  _version: Int
}

input DeleteLabPracticeSessionCommandInput {
  id: ID!
  _version: Int
}

input ModelLabPracticeSessionCommandConditionInput {
  requestDate: ModelStringInput
  executionDate: ModelStringInput
  status: ModelStringInput
  parameters: ModelStringInput
  labpracticesessionID: ModelIDInput
  labpracticecommandID: ModelIDInput
  and: [ModelLabPracticeSessionCommandConditionInput]
  or: [ModelLabPracticeSessionCommandConditionInput]
  not: ModelLabPracticeSessionCommandConditionInput
}

type ModelLabPracticeOutputConnection @aws_api_key @aws_cognito_user_pools {
  items: [LabPracticeOutput]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLabPracticeOutputFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  labelName: ModelStringInput
  order: ModelIntInput
  description: ModelStringInput
  units: ModelStringInput
  labpracticeID: ModelIDInput
  outputType: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  and: [ModelLabPracticeOutputFilterInput]
  or: [ModelLabPracticeOutputFilterInput]
  not: ModelLabPracticeOutputFilterInput
}

input CreateLabPracticeOutputInput {
  id: ID
  name: String!
  labelName: String
  order: Int
  description: String
  units: AWSJSON
  labpracticeID: ID!
  outputType: String!
  updatedBy: String
  createdBy: String!
  _version: Int
}

input UpdateLabPracticeOutputInput {
  id: ID!
  name: String
  labelName: String
  order: Int
  description: String
  units: AWSJSON
  labpracticeID: ID
  outputType: String
  updatedBy: String
  createdBy: String
  _version: Int
}

input DeleteLabPracticeOutputInput {
  id: ID!
  _version: Int
}

input ModelLabPracticeOutputConditionInput {
  name: ModelStringInput
  labelName: ModelStringInput
  order: ModelIntInput
  description: ModelStringInput
  units: ModelStringInput
  labpracticeID: ModelIDInput
  outputType: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  and: [ModelLabPracticeOutputConditionInput]
  or: [ModelLabPracticeOutputConditionInput]
  not: ModelLabPracticeOutputConditionInput
}

type ModelLabPracticeSessionConnection @aws_api_key @aws_cognito_user_pools {
  items: [LabPracticeSession]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLabPracticeSessionFilterInput {
  id: ModelIDInput
  startDate: ModelStringInput
  endDate: ModelStringInput
  description: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  labpracticeID: ModelIDInput
  labSemesterID: ModelIDInput
  and: [ModelLabPracticeSessionFilterInput]
  or: [ModelLabPracticeSessionFilterInput]
  not: ModelLabPracticeSessionFilterInput
}

input CreateLabPracticeSessionInput {
  id: ID
  startDate: AWSDateTime!
  endDate: AWSDateTime!
  description: String
  updatedBy: String
  createdBy: String!
  labpracticeID: ID
  labSemesterID: ID
  _version: Int
}

input UpdateLabPracticeSessionInput {
  id: ID!
  startDate: AWSDateTime
  endDate: AWSDateTime
  description: String
  updatedBy: String
  createdBy: String
  labpracticeID: ID
  labSemesterID: ID
  _version: Int
}

input DeleteLabPracticeSessionInput {
  id: ID!
  _version: Int
}

input ModelLabPracticeSessionConditionInput {
  startDate: ModelStringInput
  endDate: ModelStringInput
  description: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  labpracticeID: ModelIDInput
  labSemesterID: ModelIDInput
  and: [ModelLabPracticeSessionConditionInput]
  or: [ModelLabPracticeSessionConditionInput]
  not: ModelLabPracticeSessionConditionInput
}

type ModelLabPracticeDeviceConnection @aws_api_key @aws_cognito_user_pools {
  items: [LabPracticeDevice]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLabPracticeDeviceFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  description: ModelStringInput
  type: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  labpracticeID: ModelIDInput
  and: [ModelLabPracticeDeviceFilterInput]
  or: [ModelLabPracticeDeviceFilterInput]
  not: ModelLabPracticeDeviceFilterInput
}

input CreateLabPracticeDeviceInput {
  id: ID
  name: String!
  description: String
  type: String
  updatedBy: String
  createdBy: String
  labpracticeID: ID
  _version: Int
}

input UpdateLabPracticeDeviceInput {
  id: ID!
  name: String
  description: String
  type: String
  updatedBy: String
  createdBy: String
  labpracticeID: ID
  _version: Int
}

input DeleteLabPracticeDeviceInput {
  id: ID!
  _version: Int
}

input ModelLabPracticeDeviceConditionInput {
  name: ModelStringInput
  description: ModelStringInput
  type: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  labpracticeID: ModelIDInput
  and: [ModelLabPracticeDeviceConditionInput]
  or: [ModelLabPracticeDeviceConditionInput]
  not: ModelLabPracticeDeviceConditionInput
}

type ModelLabPracticeParameterConnection @aws_api_key @aws_cognito_user_pools {
  items: [LabPracticeParameter]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLabPracticeParameterFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  labelName: ModelStringInput
  order: ModelIntInput
  description: ModelStringInput
  defaultValue: ModelStringInput
  minValue: ModelIntInput
  maxValue: ModelIntInput
  regex: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  labpracticecommandID: ModelIDInput
  labpracticeID: ModelIDInput
  and: [ModelLabPracticeParameterFilterInput]
  or: [ModelLabPracticeParameterFilterInput]
  not: ModelLabPracticeParameterFilterInput
}

input CreateLabPracticeParameterInput {
  id: ID
  name: String!
  labelName: String
  order: Int
  description: String
  defaultValue: String!
  minValue: Int
  maxValue: Int
  regex: String
  updatedBy: String
  createdBy: String
  labpracticecommandID: ID
  labpracticeID: ID
  _version: Int
}

input UpdateLabPracticeParameterInput {
  id: ID!
  name: String
  labelName: String
  order: Int
  description: String
  defaultValue: String
  minValue: Int
  maxValue: Int
  regex: String
  updatedBy: String
  createdBy: String
  labpracticecommandID: ID
  labpracticeID: ID
  _version: Int
}

input DeleteLabPracticeParameterInput {
  id: ID!
  _version: Int
}

input ModelLabPracticeParameterConditionInput {
  name: ModelStringInput
  labelName: ModelStringInput
  order: ModelIntInput
  description: ModelStringInput
  defaultValue: ModelStringInput
  minValue: ModelIntInput
  maxValue: ModelIntInput
  regex: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  labpracticecommandID: ModelIDInput
  labpracticeID: ModelIDInput
  and: [ModelLabPracticeParameterConditionInput]
  or: [ModelLabPracticeParameterConditionInput]
  not: ModelLabPracticeParameterConditionInput
}

type ModelLabPracticeCommandConnection @aws_api_key @aws_cognito_user_pools {
  items: [LabPracticeCommand]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLabPracticeCommandFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  labelName: ModelStringInput
  order: ModelIntInput
  description: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  labpracticeID: ModelIDInput
  and: [ModelLabPracticeCommandFilterInput]
  or: [ModelLabPracticeCommandFilterInput]
  not: ModelLabPracticeCommandFilterInput
}

input CreateLabPracticeCommandInput {
  id: ID
  name: String!
  labelName: String
  order: Int
  description: String
  updatedBy: String
  createdBy: String!
  labpracticeID: ID!
  _version: Int
}

input UpdateLabPracticeCommandInput {
  id: ID!
  name: String
  labelName: String
  order: Int
  description: String
  updatedBy: String
  createdBy: String
  labpracticeID: ID
  _version: Int
}

input DeleteLabPracticeCommandInput {
  id: ID!
  _version: Int
}

input ModelLabPracticeCommandConditionInput {
  name: ModelStringInput
  labelName: ModelStringInput
  order: ModelIntInput
  description: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  labpracticeID: ModelIDInput
  and: [ModelLabPracticeCommandConditionInput]
  or: [ModelLabPracticeCommandConditionInput]
  not: ModelLabPracticeCommandConditionInput
}

type ModelLabPracticeConnection @aws_api_key @aws_cognito_user_pools {
  items: [LabPractice]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLabPracticeFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  description: ModelStringInput
  duration: ModelIntInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  laboratoryID: ModelIDInput
  and: [ModelLabPracticeFilterInput]
  or: [ModelLabPracticeFilterInput]
  not: ModelLabPracticeFilterInput
}

input CreateLabPracticeInput {
  id: ID
  name: String!
  description: String
  duration: Int!
  updatedBy: String
  createdBy: String!
  laboratoryID: ID!
  _version: Int
  labPracticeLabPracticeDeviceId: ID
}

input UpdateLabPracticeInput {
  id: ID!
  name: String
  description: String
  duration: Int
  updatedBy: String
  createdBy: String
  laboratoryID: ID
  _version: Int
  labPracticeLabPracticeDeviceId: ID
}

input DeleteLabPracticeInput {
  id: ID!
  _version: Int
}

input ModelLabPracticeConditionInput {
  name: ModelStringInput
  description: ModelStringInput
  duration: ModelIntInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  laboratoryID: ModelIDInput
  and: [ModelLabPracticeConditionInput]
  or: [ModelLabPracticeConditionInput]
  not: ModelLabPracticeConditionInput
}

type ModelLabSemesterConnection @aws_api_key @aws_cognito_user_pools {
  items: [LabSemester]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLabSemesterFilterInput {
  id: ModelIDInput
  semesterName: ModelStringInput
  description: ModelStringInput
  professor: ModelStringInput
  monitorEmailList: ModelStringInput
  studentEmailList: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  laboratoryID: ModelIDInput
  and: [ModelLabSemesterFilterInput]
  or: [ModelLabSemesterFilterInput]
  not: ModelLabSemesterFilterInput
}

input CreateLabSemesterInput {
  id: ID
  semesterName: String!
  description: String
  professor: String!
  monitorEmailList: AWSJSON
  studentEmailList: AWSJSON!
  updatedBy: String
  createdBy: String!
  laboratoryID: ID!
  _version: Int
}

input UpdateLabSemesterInput {
  id: ID!
  semesterName: String
  description: String
  professor: String
  monitorEmailList: AWSJSON
  studentEmailList: AWSJSON
  updatedBy: String
  createdBy: String
  laboratoryID: ID
  _version: Int
}

input DeleteLabSemesterInput {
  id: ID!
  _version: Int
}

input ModelLabSemesterConditionInput {
  semesterName: ModelStringInput
  description: ModelStringInput
  professor: ModelStringInput
  monitorEmailList: ModelStringInput
  studentEmailList: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  laboratoryID: ModelIDInput
  and: [ModelLabSemesterConditionInput]
  or: [ModelLabSemesterConditionInput]
  not: ModelLabSemesterConditionInput
}

type ModelLaboratoryConnection @aws_api_key @aws_cognito_user_pools {
  items: [Laboratory]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLaboratoryFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  description: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  organizationID: ModelIDInput
  and: [ModelLaboratoryFilterInput]
  or: [ModelLaboratoryFilterInput]
  not: ModelLaboratoryFilterInput
}

input CreateLaboratoryInput {
  id: ID
  name: String!
  description: String
  updatedBy: String
  createdBy: String!
  organizationID: ID!
  _version: Int
}

input UpdateLaboratoryInput {
  id: ID!
  name: String
  description: String
  updatedBy: String
  createdBy: String
  organizationID: ID
  _version: Int
}

input DeleteLaboratoryInput {
  id: ID!
  _version: Int
}

input ModelLaboratoryConditionInput {
  name: ModelStringInput
  description: ModelStringInput
  updatedBy: ModelStringInput
  createdBy: ModelStringInput
  organizationID: ModelIDInput
  and: [ModelLaboratoryConditionInput]
  or: [ModelLaboratoryConditionInput]
  not: ModelLaboratoryConditionInput
}

type ModelUserLabSemesterConnection @aws_api_key @aws_cognito_user_pools {
  items: [UserLabSemester]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelUserLabSemesterFilterInput {
  id: ModelIDInput
  userID: ModelIDInput
  labsemesterID: ModelIDInput
  and: [ModelUserLabSemesterFilterInput]
  or: [ModelUserLabSemesterFilterInput]
  not: ModelUserLabSemesterFilterInput
}

input CreateUserLabSemesterInput {
  id: ID
  userID: ID!
  labsemesterID: ID!
  _version: Int
}

input UpdateUserLabSemesterInput {
  id: ID!
  userID: ID
  labsemesterID: ID
  _version: Int
}

input DeleteUserLabSemesterInput {
  id: ID!
  _version: Int
}

input ModelUserLabSemesterConditionInput {
  userID: ModelIDInput
  labsemesterID: ModelIDInput
  and: [ModelUserLabSemesterConditionInput]
  or: [ModelUserLabSemesterConditionInput]
  not: ModelUserLabSemesterConditionInput
}

input ModelIDKeyConditionInput {
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  between: [ID]
  beginsWith: ID
}
